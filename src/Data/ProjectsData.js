export const projects = [
  {
    id: "asset-flow",
    title: "Asset Flow [Asset Management System]",
    description:
      "AssetFlow is a web app for managing company assets, allowing HR managers to assign, track, and report on returnable and non-returnable assets. Employees can request and return assets, while the system automates notifications and subscription management for improved efficiency.",
    fullDescription:
      "AssetFlow is a web app for managing company assets, allowing HR managers to assign, track, and report on returnable and non-returnable assets. Employees can request and return assets, while the system automates notifications and subscription management for improved efficiency.",
    image: "./../../public/asset-flow.png",
    technologies: [
      "React",
      "Tailwind CSS",
      "Node.js",
      "MongoDB",
      "Express.js",
      "Firebase",
      "Stripe",
    ],
    mainTechStack: [
      "React 18 with TypeScript",
      "Node.js & Express.js",
      "MongoDB with Mongoose",
      "Redux Toolkit for state management",
      "Stripe for payment processing",
      "AWS S3 for image storage",
    ],
    github: "https://github.com/syedmehedi34/asset-flow",
    live: "https://asset-flow.netlify.app/",
    challenges: [
      "Implementing seamless asset tracking across multiple devices",
      "Handling complex user roles and permissions for HR managers and employees",
      "Ensuring smooth asset retrieval and maintenance processes with minimal errors",
      "Maintaining real-time synchronization of asset assignments and status updates",
      "Optimizing database queries for large amounts of asset data and reports",
    ],
    improvements: [
      "Implement AI-based asset prediction for better resource planning",
      "Add multi-language support for global businesses",
      "Integrate with more HR management systems for seamless data synchronization",
      "Improve the report generation feature with custom filters and export options",
      "Introduce asset condition tracking for more detailed reporting",
    ],
    features: [
      "User authentication and role-based access control for HR managers and employees",
      "Asset tracking for both returnable and non-returnable assets",
      "Subscription-based business model with tiered plans",
      "PDF report generation for asset distribution and status",
      "Integration with Stripe for secure payments and subscription management",
      "Admin dashboard for monitoring and managing assets and users",
      "Real-time notifications for asset assignment, retrieval, and maintenance",
      "Mobile-responsive UI designed with TailwindCSS and Material UI",
    ],
  },

  {
    id: "next-blog",
    title: "Next Blog - A Blogging website",
    description:
      "Next Blog is a modern, fully-responsive blogging platform built with React, Firebase, and MongoDB. It features user authentication, wish-list management, and a commenting system. Admins can manage content, and the site is optimised for mobile, tablet, and desktop devices.",
    fullDescription:
      "Next Blog is a modern, fully-responsive blogging platform built with React, Firebase, and MongoDB. It features user authentication, wish-list management, and a commenting system. Admins can manage content, and the site is optimised for mobile, tablet, and desktop devices.",
    image: "./../../public/next-blog.png",
    technologies: [
      "React",
      "Tailwind CSS",
      "Node.js",
      "MongoDB",
      "Express.js",
      "Firebase",
    ],
    mainTechStack: [
      "React with Vite for frontend development",
      "TailwindCSS and DaisyUI for styling and responsive design",
      "Firebase for authentication and backend services",
      "Firestore & Cloud Storage for database and asset storage",
      "React Query for state management and data fetching",
      "MUI (Material UI) for UI components and design consistency",
      "React-PDF Renderer for generating PDF reports",
      "Axios for making HTTP requests",
      "Recharts for data visualization and reporting",
    ],
    github: "https://github.com/syedmehedi34/next-blog",
    live: "https://your-next-blog.netlify.app/",
    challenges: [
      "Ensuring secure user authentication and data protection across different login methods (email/password, Google)",
      "Implementing efficient state management for dynamic features like wish-list, comments, and blog data",
      "Handling large volumes of blog data and ensuring real-time updates for user interactions (comments, blog views)",
      "Managing admin controls for blog post creation, updates, and deletions without data conflicts",
      "Ensuring cross-device compatibility with a fully responsive design",
    ],
    improvements: [
      "Add AI-powered content recommendations based on user interests and behavior",
      "Implement advanced search with filters like tags, categories, and date ranges",
      "Introduce multi-language support for a more global audience",
      "Allow users to follow favorite authors or bloggers and get updates on new posts",
      "Optimize performance by lazy loading blog posts and images for faster page loads",
    ],
    features: [
      "User authentication with email/password and Google login options",
      "Dynamic blog listings that can be filtered by category and searched by title",
      "Wishlist functionality for saving and viewing favorite blogs later",
      "Comment system allowing users to comment on blog posts (excluding their own)",
      "Admin controls for creating, updating, and deleting blog posts",
      "Fully responsive design optimized for mobile, tablet, and desktop devices",
      "User-friendly interface with an organized, modern UI for smooth navigation",
      "Secure access control for private routes using JWT authentication",
    ],
  },

  {
    id: "gaming-grove",
    title: "Gaming Groove : A Game Review Application",
    description:
      "Gaming Groove is a game review app where users can browse, share, and manage game reviews. It features secure login, user dashboards, and a watchlist. Built with React, Firebase, and MongoDB, it offers a responsive and easy-to-use platform for gaming enthusiasts.",
    fullDescription:
      "Gaming Groove is a game review app where users can browse, share, and manage game reviews. It features secure login, user dashboards, and a watchlist. Built with React, Firebase, and MongoDB, it offers a responsive and easy-to-use platform for gaming enthusiasts.",
    image: "./../../public/gaming-groove.png",
    technologies: [
      "React",
      "Tailwind CSS",
      "Node.js",
      "MongoDB",
      "Express.js",
      "Firebase",
    ],
    mainTechStack: [
      "React for building the user interface with reusable components",
      "Tailwind CSS & DaisyUI for modern, responsive styling",
      "React Router for seamless navigation across pages",
      "Firebase for user authentication and Google login integration",
      "MongoDB for storing review data and user information",
      "Context API for managing global state across the application",
      "React Awesome Components for interactive UI elements",
      "React Icons for scalable and customizable icons",
      "React Hooks (useEffect, useState, etc.) for managing component lifecycle and side effects",
      "Local Storage for storing user-specific information for a better experience",
    ],
    github: "https://github.com/syedmehedi34/gaming-groove-client",
    live: "https://gaming-groove.surge.sh/",
    challenges: [
      "Ensuring secure user authentication and data protection across different login methods (email/password, Google)",
      "Implementing real-time synchronization of user reviews, ratings, and watchlist data across multiple devices",
      "Managing a large volume of game reviews and ensuring fast load times and efficient database queries",
      "Ensuring the accuracy of user-generated content while preventing conflicts or errors in review management",
      "Maintaining a consistent and responsive UI across different screen sizes and devices",
    ],
    improvements: [
      "Integrate AI-powered game recommendations based on user preferences and previous reviews",
      "Implement advanced search filters such as genre, ratings, and release date for better content discovery",
      "Introduce a multi-language feature for a global audience to access reviews in different languages",
      "Allow users to share their reviews on social media platforms for wider engagement",
      "Enhance the watchlist feature with notifications for new game reviews or updates",
    ],
    features: [
      "User authentication with email/password and Google login options",
      "Detailed game reviews with ratings, descriptions, and user feedback",
      "User dashboard where users can view, edit, or delete their own reviews",
      "Watchlist functionality for users to save games they want to track or review later",
      "Admin controls for managing user reviews and game content",
      "Fully responsive design optimized for mobile, tablet, and desktop devices",
      "User-friendly interface built with Tailwind CSS for easy navigation and readability",
      "Secure access control for user-specific routes with Firebase authentication",
    ],
  },
];
